package composer;

import org.zkoss.zk.ui.Component;
import org.zkoss.zk.ui.Page;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.metainfo.ComponentInfo;
import org.zkoss.zk.ui.select.SelectorComposer;
import org.zkoss.zk.ui.select.annotation.Listen;
import org.zkoss.zk.ui.select.annotation.Wire;
import org.zkoss.zul.Tree;
import org.zkoss.zul.Treechildren;
import org.zkoss.zul.Treeitem;

public class TreeComposer extends SelectorComposer<Component> {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3043418944149662028L;

	@Wire
	private Tree tree;

	@Override
	public ComponentInfo doBeforeCompose(Page page, Component parent,
			ComponentInfo compInfo) {
		return super.doBeforeCompose(page, parent, compInfo);
	}

	@Override
	public void doAfterCompose(Component comp) throws Exception {
		super.doAfterCompose(comp);
	}

	@Listen("onClick = #tree")
	public void onSelectTreeitem(Event event) {
		Treeitem treeitem = (Treeitem) event.getTarget();
	}

	public void selecteAllChildren(Treeitem treeitem) {
		if (treeitem.isOpen()) {
			Treechildren treechildren = treeitem.getTreechildren();
			for (Treeitem item : treechildren.getItems()) {
				setSelectedTreeitem(item, treeitem.isSelected());
			}
		}
	}

	public void setSelectedTreeitem(Treeitem treeitem, boolean selected) {
		treeitem.setSelected(selected);
	}
}
